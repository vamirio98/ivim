#---------------------------------------------
# for signal file
#---------------------------------------------
# define a new task
[file-build]
# define the commands for the task, macros in the "$(...)" form will
# be subsitiuted
# shell command, use quotation for filenames containing spaces
command:c,cc,cpp/linux=gcc -Wall -O2 "$(VIM_FILEPATH)" -o "$(VIM_FILENOEXT)" -lstdc++ -lm
command:c,cc,cpp/win32=cl /O2 "$(VIM_FILEPATH)" && del "$(VIM_FILENOEXT).obj"
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
# output mode
output=quickfix
# working directory
cwd=$(VIM_FILEDIR)
# save all modified buffers before running the task
save=2


[file-debug]
command:c,cc,cpp/linux=gcc -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm
output=quickfix
cwd=$(VIM_FILEDIR)
save=2


[file-run]
command:c,cc,cpp/linux="$(VIM_PATHNOEXT)"
command:c,cc,cpp/win32="$(VIM_PATHNOEXT).exe"
command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
output=terminal
cwd=$(VIM_FILEDIR)

[file-gdbgui]
command:c,cc,cpp=gdbgui "$(VIM_PATHNOEXT)"
output=terminal
cwd=$(VIM_FILEDIR)


[exe-del]
command:c,cc,cpp/linux=rm "$(VIM_PATHNOEXT)"
command:c,cc,cpp/win32=del "$(VIM_PATHNOEXT).exe"
output=quickfix
cwd=$(VIM_FILEDIR)


#---------------------------------------------
# for a project
#---------------------------------------------
[project-build]
command/linux=make build
command/win32=nmake build
# set the working directory to the project root
cwd=$(VIM_ROOT)
output=quickfix


[project-debug]
command=make debug
# <root> is an alias to `$(VIM_ROOT)`, a little easier to type
cwd=<root>
output=quickfix


[project-run]
command=make run
cwd=<root>
output=terminal


[project-clean]
command=make clean
cwd=<root>
output=quickfix
